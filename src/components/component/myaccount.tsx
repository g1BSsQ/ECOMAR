/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/SXyePBR9qvC
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

import { Avatar, AvatarImage, AvatarFallback } from "~/components/ui/avatar"
import Link from "next/link"
import { Button } from "~/components/ui/button"
import { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter } from "~/components/ui/card"
import { JSX, SVGProps, useEffect, useState } from "react"
import { Marketplace } from "./marketplace"
import React from "react"
export function Myaccount() {
  
  const item = {
    id:1,
    title: "Renewable Energy",
    description: "energy carbon credits from a wind farm project",
    price: 15.99,
    amount: 1000,
  }
  interface Item  {
    id:number,
    title: string,
    description: string,
    price: number,
    amount: number,
  }
  const [items, setItems] = useState([item]);
  useEffect(()=>{ 
    const item2 = {
      id:2,
      title: "Forestry",
      description: "Carbon credits from a reforestation project in the Amazon",
      price: 20.99,
      amount: 500,
    };
    setItems([...items, item2]);
  },[]);
  const handleClickSell = (item:Item) =>{
    addCredit(item);
  }

  const addCredit = async (item) => {
    try {
      if (true) {
        const response = await fetch('http://localhost:8080/credit', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ title: item.title , description: item.description,
             price: item.price, amount: item.amount }),
        });
        const data = await response.json();
        setItems(items.filter((i) => i.id !== item.id));
      }
    } catch (error) {
      console.error('Lỗi khi thêm credit:', error);
    }
  };
  const [itemsMarket, setItemMarket] = useState([]);
  useEffect(() => {
    fetchCredits();
  }, []);
  
  const fetchCredits = async () => {
    try {
      const response = await fetch('http://localhost:8080/credit'); 
      const data = await response.json();
      setItemMarket(data);
      console.log(data);
    } catch (error) {
      console.error('Lỗi khi lấy dữ liệu:', error);
    }
  };
  items.map((item)=>(
    // nếu đã có trong itemsMarket thì xóa đi
    itemsMarket.map((itemMarket)=>{
      if(item.title=== itemMarket.title){
        setItems(items.filter((i) => i.title !== item.title));
      }
    })
  ));
  return (
    <div className="min-h-screen bg-gray-100">
      <main className="container mx-auto p-4">
      <h1 className="text-2xl font-bold mb-4">My Carbon Credit</h1>
      <div className="grid gap-4 md:grid-cols-3">
        {items.map((item)=>(
          <div key={item.id}>
           <Card className="shadow-md">
            <CardHeader>
              <CardTitle>{item.title}</CardTitle>
              <CardDescription>{item.description}</CardDescription>
            </CardHeader>
            <CardContent>
              <div className="text-xl font-bold">{"$"+item.price}</div>
              <div className="text-sm text-muted-foreground">{item.amount+" available"}</div>
            </CardContent>
            <CardFooter>
            <Button onClick={ () => handleClickSell(item) }  className="w-full bg-green-700 text-white">SELL</Button>
            </CardFooter>
            </Card>   
          </div>
        ))}
      </div>
      </main>
    </div>
  )
}